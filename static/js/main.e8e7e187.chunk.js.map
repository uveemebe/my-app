{"version":3,"sources":["casilla.jsx","tablero.jsx","tableroInicial.js","index.js"],"names":["Contenedor","styled","button","props","color","Casilla","onClick","this","casilla","valor","React","Component","div","Fila","Boton","Tablero","limpiar","setState","casillas","JSON","parse","stringify","girar","alto","state","length","ancho","x","fila","y","push","pulsar","slice","indice","valores","findIndex","map","key","tableroInicial","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8e7e187.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Contenedor = styled.button`\r\n  background: ${props => props.color ? props.color : \"#ccc\"};\r\n  border: none;\r\n  float: left;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  line-height: 32px;\r\n  height: 32px;\r\n  margin: 1px;\r\n  padding: 0;\r\n  text-align: center;\r\n  width: 32px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default class Casilla extends React.Component {\r\n    render() {\r\n      return (\r\n        <Contenedor onClick={() => this.props.onClick()} color={this.props.casilla.color}>\r\n            {this.props.casilla.valor}\r\n        </Contenedor>\r\n      );\r\n    }\r\n  }","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Casilla from \"./casilla\";\r\n\r\nconst Contenedor = styled.div``;\r\nconst Fila = styled.div`\r\n  clear: both;\r\n  float: left;\r\n`;\r\nconst Boton = styled.button`\r\n  margin-top: 8px;\r\n  clear: both;\r\n  float: left;\r\n`;\r\n\r\nexport default class Tablero extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { casillas: props.casillas }\r\n    this.casillas = JSON.parse(JSON.stringify(props.casillas))\r\n    this.valor = null;\r\n  }\r\n\r\n  limpiar = () => {\r\n    this.valor = null;\r\n    this.setState({ casillas: JSON.parse(JSON.stringify(this.casillas)) })\r\n  }\r\n\r\n  girar = () => {\r\n    const alto = this.state.casillas.length;\r\n    const ancho = this.state.casillas[0].length;\r\n    let casillas = [];\r\n    for (let x = 0; x < ancho; x++) {\r\n      let fila = [];\r\n      for (let y = alto - 1; y >= 0; y--) {\r\n        fila.push(this.state.casillas[y][x]);\r\n      }\r\n      casillas.push(fila);\r\n    }\r\n    this.setState({ casillas: casillas });\r\n  };\r\n\r\n  pulsar = (x, y) => {\r\n    let casillas = this.state.casillas.slice()\r\n    let casilla = casillas[y][x];\r\n    const indice = this.props.valores.findIndex(\r\n      valor => valor === casilla.valor\r\n    )\r\n    if (indice === 0 && this.valor) {\r\n      casilla.valor = this.valor\r\n    }\r\n    else {\r\n      casilla.valor = this.props.valores[indice < this.props.valores.length - 1 ? indice + 1 : 0]\r\n      this.valor = casilla.valor\r\n    }\r\n    casillas[y][x] = casilla\r\n    this.setState({ casillas: casillas })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Contenedor>\r\n        {this.state.casillas.map((fila, y) => (\r\n          <Fila key={y}>\r\n            {fila.map((casilla, x) => (<Casilla key={x} onClick={() => this.pulsar(x, y)} casilla={casilla} />))}\r\n          </Fila>\r\n        ))}\r\n        <Boton onClick={this.girar}>Girar</Boton>\r\n        <Boton onClick={this.limpiar}>Limpiar</Boton>\r\n      </Contenedor>\r\n    );\r\n  }\r\n}\r\n","const tableroInicial = {\r\n    casillas: [[{valor: null, color: \"lightblue\"}, {valor: null, color: \"lightblue\"}, {valor: null, color: \"lightblue\"}, {valor: null, color: \"lightblue\"}, {valor: null, color: \"lightgreen\"}, {valor: null, color: \"lightgreen\"}, {valor: null, color: \"lightgreen\"}, {valor: null, color: \"lightgreen\"}], \r\n    [{valor: null, color: \"lightblue\"}, {valor: null, color: \"lightblue\"}, {valor: null, color: \"lightblue\"}, {valor: null, color: \"lightblue\"}, {valor: null, color: \"lightgreen\"}, {valor: null, color: \"lightgreen\"}, {valor: null, color: \"lightgreen\"}, {valor: null, color: \"lightgreen\"}], \r\n    [{valor: null, color: \"lightblue\"}, {valor: null, color: \"lightblue\"}, {valor: null, color: \"lightblue\"}, {valor: null, color: \"lightblue\"}, {valor: null, color: \"lightgreen\"}, {valor: null, color: \"lightgreen\"}, {valor: null, color: \"lightgreen\"}, {valor: null, color: \"lightgreen\"}], \r\n    [{valor: null, color: \"lightblue\"}, {valor: null, color: \"lightblue\"}, {valor: null, color: \"lightblue\"}, {valor: null, color: \"lightblue\"}, {valor: null, color: \"lightgreen\"}, {valor: null, color: \"lightgreen\"}, {valor: null, color: \"lightgreen\"}, {valor: null, color: \"lightgreen\"}], \r\n    [{valor: null, color: \"lemonchiffon\"}, {valor: null, color: \"lemonchiffon\"}, {valor: null, color: \"lemonchiffon\"}, {valor: null, color: \"lemonchiffon\"}, {valor: null, color: \"salmon\"}, {valor: null, color: \"salmon\"}, {valor: null, color: \"salmon\"}, {valor: null, color: \"salmon\"}], \r\n    [{valor: null, color: \"lemonchiffon\"}, {valor: null, color: \"lemonchiffon\"}, {valor: null, color: \"lemonchiffon\"}, {valor: null, color: \"lemonchiffon\"}, {valor: null, color: \"salmon\"}, {valor: null, color: \"salmon\"}, {valor: null, color: \"salmon\"}, {valor: null, color: \"salmon\"}], \r\n    [{valor: null, color: \"lemonchiffon\"}, {valor: null, color: \"lemonchiffon\"}, {valor: null, color: \"lemonchiffon\"}, {valor: null, color: \"lemonchiffon\"}, {valor: null, color: \"salmon\"}, {valor: null, color: \"salmon\"}, {valor: null, color: \"salmon\"}, {valor: null, color: \"salmon\"}], \r\n    [{valor: null, color: \"lemonchiffon\"}, {valor: null, color: \"lemonchiffon\"}, {valor: null, color: \"lemonchiffon\"}, {valor: null, color: \"lemonchiffon\"}, {valor: null, color: \"salmon\"}, {valor: null, color: \"salmon\"}, {valor: null, color: \"salmon\"}, {valor: null, color: \"salmon\"}]],\r\n    valores: [null, \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"X\"]\r\n};\r\n\r\nexport default tableroInicial;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Tablero from \"./tablero\";\r\nimport tableroInicial from \"./tableroInicial\";\r\n\r\nReactDOM.render(<Tablero casillas={tableroInicial.casillas} valores={tableroInicial.valores} />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}